@using MudBlazorUI.Pages
@inherits LayoutComponentBase
@inject IDialogService Dialog

<MudThemeProvider IsDarkMode="@themeOn" />
<MudDialogProvider FullWidth="true"
                   MaxWidth="MaxWidth.ExtraSmall"
                   CloseButton="true"
                   DisableBackdropClick="true"
                   NoHeader="true"
                   Position="DialogPosition.Center"
                   CloseOnEscapeKey="true" />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1" Style="background-color: rgba(0, 0, 0, 0.5); width: 100%">
        <MudIconButton Icon="@Icons.Material.Filled.Menu"
                       Color="Color.Inherit"
                       Edge="Edge.Start"
                       OnClick="@DrawerToggle" />

        <MudText Typo="Typo.h5" Class="px-4">Faculty of Engineering</MudText>

        <MudSpacer />

        <AuthorizeView>
            <NotAuthorized>
                <MudButton StartIcon="@Icons.Material.Filled.Login"
                           Href="/account/login"
                           Color="Color.Inherit"> Login </MudButton>
            </NotAuthorized>
        </AuthorizeView>

        <MudSwitch @bind-Checked="@themeOn" Color="Color.Inherit" OnCheckedChanged="@ToggleTheme()" ThumbIcon="@(themeOn==true ? Icons.Material.Sharp.DarkMode : Icons.Material.Sharp.LightMode)"
                   ThumbIconColor="@(themeOn==true ? Color.Warning : Color.Warning)" />
        <MudBadge Dot="true" Color="Color.Info"  Class="mx-6 my-4" Overlap="true">
            <MudIconButton Icon="@Icons.Material.Filled.Notifications" Color="Color.Primary"
                           OnClick="@((e) => OpenDialog(topCenter))" aria-label="github">

            </MudIconButton>
        </MudBadge>

    </MudAppBar>
      
    <AuthorizeView>
        <Authorized>
            <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
                <NavMenu />
            </MudDrawer>
        </Authorized>
    </AuthorizeView>

    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {
    private bool _drawerOpen = true;
    private bool themeOn;

    DialogOptions topCenter = new DialogOptions() { Position = DialogPosition.TopRight, };
    private void OpenDialog(DialogOptions options)
    {
        Dialog.Show<NotificationsView>("Notifications", options);
    }


    protected override async Task OnInitializedAsync()
    {
        string? theme = await userProfile.GetTheme();
        themeOn = !string.IsNullOrEmpty(theme) && theme.Equals("dark", StringComparison.OrdinalIgnoreCase);
        await base.OnInitializedAsync();
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task<bool> ToggleTheme()
    {
        if (themeOn == true)
        {
            await userProfile.SetDarkTheme("dark");

        }
        else
        {
            await userProfile.SetDarkTheme("light");

        }
        return themeOn;
    }
}
